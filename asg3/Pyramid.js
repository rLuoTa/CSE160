class Pyramid{
    constructor() {
        this.type = 'pyramid';
        this.color = [1.0, 1.0, 1.0, 1.0];
        this.matrix = new Matrix4();
        this.textureNum = -2;
    }

    render(){
        var rgba = this.color;

        gl.uniform1i(u_whichTexture, this.textureNum);
        gl.uniform4f(u_FragColor, rgba[0], rgba[1], rgba[2], rgba[3]);
        gl.uniformMatrix4fv(u_ModelMatrix, false, this.matrix.elements);

        //back
        //drawTriangle3D([0.0,0.0,0.0, 1.0,1.0,0.0, 1.0,0.0,0.0]);
        //drawTriangle3D([0.0,0.0,0.0, 0.0,1.0,0.0, 1.0,1.0,0.0]);
        /*
        drawTriangle3D([0.0,0.0,0.0, 0.0,1.0,0.0, 1.0,0.0,0.0,
            0.0,0.0,0.0,  0.0,0.0,1.0,  1.0,0.0,0.0,
            0.0,0.0,1.0,  0.0,1.0,0.0,  1.0,0.0,0.0,
            0.0,0.0,0.0,  0.0,1.0,0.0,  0.0,0.0,1.0]);

         */


        drawTriangle3DUV([0.0,0.0,0.0, 0.0,1.0,0.0, 1.0,0.0,0.0,
            0.0,0.0,0.0,  0.0,0.0,1.0,  1.0,0.0,0.0,
            0.0,0.0,1.0,  0.0,1.0,0.0,  1.0,0.0,0.0,
            0.0,0.0,0.0,  0.0,1.0,0.0,  0.0,0.0,1.0],
            [0,0, 0,1, 1,0,
                0,0, 0,1, 1,0,
                0,0, 0,0, 0,0,
                0,0, 0,0, 0,0]);

        /*drawTriangle3D([0.0,0.0,0.0, 0.0,1.0,0.0, 1.0,0.0,0.0,
            0.0,0.0,0.0,  0.0,0.0,1.0,  1.0,0.0,0.0,
            0.0,0.0,1.0,  0.0,1.0,0.0,  1.0,0.0,0.0,
            0.0,0.0,0.0,  0.0,1.0,0.0,  0.0,0.0,1.0]);*/

        let allVert = [0.0,0.0,0.0, 0.0,1.0,0.0, 1.0,0.0,0.0,
            0.0,0.0,0.0,  0.0,0.0,1.0,  1.0,0.0,0.0,
            0.0,0.0,1.0,  0.0,1.0,0.0,  1.0,0.0,0.0,
            0.0,0.0,0.0,  0.0,1.0,0.0,  0.0,0.0,1.0];
        let uv = [0,0, 0,1, 1,0,
            0,0, 0,1, 1,0,
            0,0, 0,0, 0,0,
            0,0, 0,0, 0,0];


    }
}